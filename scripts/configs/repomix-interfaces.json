{
	"output": {
		"filePath": "ai/code-interfaces.md",
		"headerText": "LogoScripta Interfaces Layer Analysis",
		// "removeComments": true,
		"removeEmptyLines": true
		// "compress": true
	},
	"tokenCount": {
		"encoding": "cl100k_base"
	},
	"include": [
		// "*config.*",
		// "tailwind.config.ts",
		// "CODING_STANDARDS.md",
		// "components.json",
		// "index.html",
		// "package.json",
		// "README.md",
		//
		// INTERFACES
		//
		// BACKEND
		//
		// "src/interfaces/backend/app.tsx",
		"src/interfaces/backend/actions/**/*",
		// "src/interfaces/backend/components/**/*",
		// Config
		// "src/interfaces/backend/config/accessors/*",
		// "src/interfaces/backend/config/columns/*",
		// "src/interfaces/backend/config/columns/common.tsx",
		// "src/interfaces/backend/config/columns/repository.tsx",
		"src/interfaces/backend/config/columns/list-item.tsx",
		// "src/interfaces/backend/config/columns/list.tsx",
		// "src/interfaces/backend/config/faceting/*",
		// "src/interfaces/backend/config/filters/*",
		// "src/interfaces/backend/config/sorting/*",
		// "src/interfaces/backend/config/categories.ts",
		// Hooks
		// "src/interfaces/backend/hooks/**/*",
		"src/interfaces/backend/hooks/useDataTable.ts",
		"src/interfaces/backend/hooks/useListActions.tsx",
		// "src/interfaces/backend/hooks/useListTableConfig.tsx",
		// "src/interfaces/backend/hooks/useTableStateStorage.ts",
		// Routes
		// "src/interfaces/backend/routes/**/*",
		// "src/interfaces/backend/routes/lists/*",
		// Views
		// "src/interfaces/backend/views/*",
		// "src/interfaces/backend/views/RepositoriesView.tsx",
		// "src/interfaces/backend/views/ListsView.tsx",
		"src/interfaces/backend/views/ListView.tsx",
		// "src/interfaces/backend/views/ListViewNew.tsx",
		//
		// SERVER
		// "src/interfaces/server/**/*",
		// "src/interfaces/server-client.tsx",
		//
		// CLI
		// "src/interfaces/cli/**/*",
		// "src/interfaces/cli/commands/github/lists.ts",
		// "src/interfaces/server-client.tsx",
		//
		// Core
		// "src/core/**/*",
		// "src/core/serialization/*",
		//
		// Schema
		// "src/shared/schema.ts",
		//
		// Application
		// "src/application/**/*",
		//
		// Domain
		// "src/domain/**/*"
		// "src/domain/config/**/*",
		// "src/shared/**/*",
		// "src/domain/models/**/*",
		// "src/domain/ports/**/*",
		// "src/domain/ports/repository-list/*",
		// "src/domain/services/**/*",
		// "src/domain/services/repository-list.ts",
		// "src/domain/value-objects/**/*"
		// "src/domain/value-objects/metadata/base.ts",
		// Infrastructure
		// "src/infrastructure/persistence/**/*"
		//
		// UI
		// "src/ui/**/*"
		// Base Components
		"src/ui/components/actions/**/*",
		// "src/ui/components/extra/**/*",
		// "src/ui/components/extra/icon-tooltip.tsx",
		// "src/ui/components/layout/ViewContainer.tsx",
		// "src/ui/components/lists/**/*",
		// Table Components
		// "src/ui/components/table/**/*",
		// "src/ui/components/table/types.ts",
		// "src/ui/components/table/DataTable.tsx",
		// "src/ui/components/table/cells/*",
		"src/ui/components/table/cells/ActionsCell.tsx",
		// "src/ui/components/table/controls/*",
		"src/ui/components/table/controls/ActionButtons.tsx"
		// "src/ui/components/table/controls/SelectionControl.tsx",
		// "src/ui/components/table/controls/data-export/*"
		// "src/ui/components/table/controls/Filters.tsx",
		// "src/ui/components/table/controls/ColumnVisibilityControl.tsx",
		// "src/ui/components/table/controls/column-visibility-helpers.ts"
		// "src/ui/components/table/headers/*",
		// "src/ui/components/table/rows/*",
		// "src/ui/components/table/filters/FacetedFilter.tsx"
		// "src/ui/components/core/table.tsx",
		// Theme
		// "src/ui/theme/**/*"
		// "src/ui/theme/globals.css"
	],
	"ignore": {
		"customPatterns": [
			// "src/interfaces/backend/routeTree.gen.ts"
			// "src/interfaces/server/**/*",
			// "src/interfaces/cli/**/*",
			// "src/ui/components/core/**/*"
			// "src/ui/components/extra/**/*"
		]
	}
}
